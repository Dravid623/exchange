services:
  timescaledb:
    image: timescale/timescaledb:latest-pg12
    container_name: timescaledb
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: my_database
      POSTGRES_USER: your_user
      POSTGRES_PASSWORD: your_password
    volumes:
      - timescale-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U your_user -d my_database"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  db:
    build:
      context: .
      dockerfile: ./apps/db/Dockerfile
    container_name: db
    volumes:
      - ./apps/db:/app
      - /app/node_modules
    depends_on:
      - timescaledb
      - redis
    environment:
      DATABASE_HOST: timescaledb
      DATABASE_PORT: 5432
      DATABASE_USER: your_user
      DATABASE_PASSWORD: your_password
      DATABASE_NAME: my_database
      REDIS_HOST: redis
      REDIS_PORT: 6379
    command: npm run dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h timescaledb -p 5432 -U your_user -d my_database"]
      interval: 10s
      timeout: 5s
      retries: 5
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    container_name: api
    ports:
      - "3005:3000"
    volumes:
      - ./apps/api:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      redis:
        condition: service_healthy
      timescaledb:
        condition: service_healthy
      db:
        condition: service_healthy

  ws:
    build:
      context: .
      dockerfile: ./apps/ws/Dockerfile
    container_name: ws
    ports:
      - "3001:3001"
    volumes:
      - ./apps/ws:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      redis:
        condition: service_healthy
      timescaledb:
        condition: service_healthy
      api:
        condition: service_healthy

  engine:
    build:
      context: .
      dockerfile: ./apps/engine/Dockerfile
    container_name: engine
    volumes:
      - ./apps/engine:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      api:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "redis", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
volumes:
  timescale-data:
